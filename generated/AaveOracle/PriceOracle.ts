// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class AssetPriceUpdated extends ethereum.Event {
  get params(): AssetPriceUpdated__Params {
    return new AssetPriceUpdated__Params(this);
  }
}

export class AssetPriceUpdated__Params {
  _event: AssetPriceUpdated;

  constructor(event: AssetPriceUpdated) {
    this._event = event;
  }

  get _asset(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _price(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get timestamp(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class EthPriceUpdated extends ethereum.Event {
  get params(): EthPriceUpdated__Params {
    return new EthPriceUpdated__Params(this);
  }
}

export class EthPriceUpdated__Params {
  _event: EthPriceUpdated;

  constructor(event: EthPriceUpdated) {
    this._event = event;
  }

  get _price(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get timestamp(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class PriceOracle extends ethereum.SmartContract {
  static bind(address: Address): PriceOracle {
    return new PriceOracle("PriceOracle", address);
  }

  getAssetPrice(_asset: Address): BigInt {
    let result = super.call(
      "getAssetPrice",
      "getAssetPrice(address):(uint256)",
      [ethereum.Value.fromAddress(_asset)]
    );

    return result[0].toBigInt();
  }

  try_getAssetPrice(_asset: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getAssetPrice",
      "getAssetPrice(address):(uint256)",
      [ethereum.Value.fromAddress(_asset)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getEthUsdPrice(): BigInt {
    let result = super.call("getEthUsdPrice", "getEthUsdPrice():(uint256)", []);

    return result[0].toBigInt();
  }

  try_getEthUsdPrice(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getEthUsdPrice",
      "getEthUsdPrice():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }
}

export class SetAssetPriceCall extends ethereum.Call {
  get inputs(): SetAssetPriceCall__Inputs {
    return new SetAssetPriceCall__Inputs(this);
  }

  get outputs(): SetAssetPriceCall__Outputs {
    return new SetAssetPriceCall__Outputs(this);
  }
}

export class SetAssetPriceCall__Inputs {
  _call: SetAssetPriceCall;

  constructor(call: SetAssetPriceCall) {
    this._call = call;
  }

  get _asset(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _price(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class SetAssetPriceCall__Outputs {
  _call: SetAssetPriceCall;

  constructor(call: SetAssetPriceCall) {
    this._call = call;
  }
}

export class SetEthUsdPriceCall extends ethereum.Call {
  get inputs(): SetEthUsdPriceCall__Inputs {
    return new SetEthUsdPriceCall__Inputs(this);
  }

  get outputs(): SetEthUsdPriceCall__Outputs {
    return new SetEthUsdPriceCall__Outputs(this);
  }
}

export class SetEthUsdPriceCall__Inputs {
  _call: SetEthUsdPriceCall;

  constructor(call: SetEthUsdPriceCall) {
    this._call = call;
  }

  get _price(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetEthUsdPriceCall__Outputs {
  _call: SetEthUsdPriceCall;

  constructor(call: SetEthUsdPriceCall) {
    this._call = call;
  }
}
